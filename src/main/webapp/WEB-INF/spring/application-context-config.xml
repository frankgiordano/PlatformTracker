<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

    <!-- Scans the classpath of this application for @Components to deploy as 
        beans -->
    <context:component-scan base-package="us.com.plattrk" >
    <!-- 	<context:exclude-filter type="assignable" expression="MailSocketImpl" /> -->
    </context:component-scan>    

    <task:annotation-driven />

    <!-- Configures the @Controller programming model -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <!-- Use the HibernateAware mapper instead of the default -->
            <bean
                class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="us.com.plattrk.util.HibernateAwareObjectMapper" />
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- Configures Handler Interceptors -->
    <mvc:interceptors>
        <!-- Changes the locale when a 'locale' request parameter is sent; e.g. 
            /?locale=de -->
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
    </mvc:interceptors>

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving 
        up static resources in the ${webappRoot}/WEB-INF/resources/ directory -->
    <mvc:resources mapping="/resources/**" location="/WEB-INF/resources/" />

    <mvc:view-controller path="/"
        view-name="/resources/html/templates/index.html" />

    <!-- Saves a locale change using a cookie -->
    <bean id="localeResolver"
        class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />

    <!-- Application Message Bundle -->
    <bean id="messageSource"
        class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>/WEB-INF/resources/properties/clientMessages</value>
            </list>
        </property>
        <property name="cacheSeconds" value="0" />
    </bean>

    <bean id="propertyConfigurer"   
       class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
         <property name="locations"> 
            <list>
                <value>classpath:plattrk.properties</value>
            </list>
    </property>
    </bean> 

    <bean id="appProperties" 
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="singleton" value="true"/>

        <property name="properties">
                <props>
                        <prop key="Regular Distribution">${RegularDist}</prop>
                        <prop key="Desktop Operations Only">${DeskTopOps}</prop>
                        <prop key="Escalated Distribution">${EscalatedDist}</prop>
                        <prop key="Outages">${Outages}</prop>
                        <prop key="Weekly Prod">${WeeklyProd}</prop>
                        <prop key="Site">${Site}</prop>
                        <prop key="EarlyAlertInSeconds">${EarlyAlertInSeconds}</prop>
                        <prop key="AlertInSecondsOffset">${AlertInSecondsOffset}</prop>
                        <prop key="EscalatedAlertInSeconds">${EscalatedAlertInSeconds}</prop>
                        <prop key="From">${From}</prop>
                        <prop key="Host">${Host}</prop>
                        <prop key="ReportLocation">${ReportLocation}</prop>   
                        <prop key="SUBJECTMSG">${SUBJECTMSG}</prop>    
                        <prop key="Phone">${Phone}</prop>                           
                </props>
        </property>
    </bean>

    <bean name="IncidentNotificationLegacyService"
          scope="prototype"
          class="us.com.plattrk.service.IncidentNotificationLegacyServiceImpl">
        <property name="mailService" ref="mailService"/>
    </bean>

    <bean name="incidentNotificationServiceImpl"
          scope="prototype"
          class="us.com.plattrk.service.IncidentNotificationServiceImpl">
        <property name="mailService" ref="mailService"/>
    </bean>
    
    <bean name="Report"
        scope="prototype"
        class="us.com.plattrk.service.ReportImpl">
        <property name="mailService" ref="mailService"/>
    </bean>
    
    <bean name="mailService"
        scope="prototype"
        class="us.com.plattrk.service.MailServiceImpl">
        <property name="mail" ref="mail"/>
    </bean>
    
    <bean name="mail"
        scope="prototype"
        class="us.com.plattrk.service.MailJavaImpl">
        <property name="mailFormat" ref="mailFormat"/>
    </bean>
    
    <bean name="mailFormat"
        scope="prototype"
        class="us.com.plattrk.service.MailJavaFormatImpl">
    </bean>

</beans>
